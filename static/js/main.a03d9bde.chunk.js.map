{"version":3,"sources":["styles/ThemeService.js","components/MyCard.js","components/experience/Company.js","components/MyExperience.js","components/MyContact.js","components/MyCareer.js","components/MyEdu.js","components/MySkills.js","components/MyFAQ.js","components/MyNav.js","serviceWorker.js","index.js","containers/App.js"],"names":["THEME","LIGHT","DARK","MyCard","this","props","id","title","children","className","React","Component","Company","position","href","company","homepage","target","rel","name","period","projects","map","project","key","description","technology","tech","MyExperience","MyContact","MyCareer","MyEdu","MySkills","Object","entries","js","rating","jsfw","node","htmlCss","linux","go","javaPhp","aws","reduce","acc","idx","skill","R","labels","skills","style","gridRow","width","MyFAQ","MyNav","toggleTheme","isLightTheme","print","onClick","icon","faMoon","size","faSun","faEnvelope","faPhone","faPrint","Boolean","window","location","hostname","match","ReactDOM","render","_window","themeService","localStorage","get","getItem","set","theme","hasOwnProperty","TypeError","setItem","register","ThemeService","useState","isLight","setTheme","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a03d9bde.chunk.js","sourcesContent":["export const THEME = {\n  LIGHT: 'LIGHT',\n  DARK: 'DARK',\n};\n\nexport function ThemeService(localStorage) {\n  const key = 'theme';\n  function register() {\n    if (!get()) {\n      set(THEME.LIGHT);\n    }\n  }\n\n  function get() {\n    return localStorage.getItem(key);\n  }\n\n  function set(theme) {\n    if (!THEME.hasOwnProperty(theme)) {\n      throw new TypeError(`'${theme}' is not recognized as a theme`);\n    }\n    localStorage.setItem(key, theme);\n  }\n  return {\n    get,\n    set,\n    register,\n  };\n}\n","import React from 'react';\nimport './MyCard.scss';\nimport PropTypes from 'prop-types';\n\nexport class MyCard extends React.Component {\n  render() {\n    const { id, title, children } = this.props;\n    return (\n      <div className=\"mycard mycard--light\" id={`mycard--${id}`}>\n        <div className=\"mycard__title\">\n          <h2>{title}</h2>\n        </div>\n        <div className=\"mycard__body\">{children}</div>\n      </div>\n    );\n  }\n}\n\nMyCard.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Company(props) {\n  return (\n    <div className=\"company\">\n      <h3>{props.position}</h3>\n      <p>\n        <a\n          href={props.company.homepage}\n          target=\"_blank\"\n          rel=\"noopener noreferrer nofollow\"\n          className={'employerLink'}\n        >\n          {props.company.name}\n        </a>{' '}\n        <small className=\"text-secondary\">({props.period})</small>\n      </p>\n      <label>Projects:</label>\n      <ul>\n        {props.projects.map(function(project, id) {\n          return (\n            <li key={`project-${id}`}>\n              <b>{project.name}</b>: {project.description}\n            </li>\n          );\n        })}\n      </ul>\n      <label>Technology:</label>\n      <ul className=\"technology-list\">\n        {props.technology.map(function(tech, id) {\n          return <li key={`tech-${id}`}>{tech}</li>;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nCompany.propTypes = {\n  id: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  company: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    homepage: PropTypes.string,\n  }),\n  period: PropTypes.string.isRequired,\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string,\n    })\n  ),\n  technology: PropTypes.arrayOf(PropTypes.string),\n};\n","import './MyExperience.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\nimport Company from './experience/Company';\n\nexport default function MyExperience() {\n  const companies = [\n    {\n      id: 'spd',\n      position: 'Full-stack Software Engineer',\n      period: 'Dec 2019 - Current',\n      company: {\n        name: 'Singapore Power',\n        homepage: 'https://www.spgroup.com.sg/',\n      },\n      projects: [\n        {\n          name: 'Application status',\n          description:\n            'a web application to check progress of an online registration/termination service process',\n        },\n        {\n          name: 'Utilities account service',\n          description:\n            'develop a web application for utilities service self-registration',\n        },\n        {\n          name: 'Centralized Cooling Sales kit',\n          description:\n            'develop a web app for proposing and selling of cooling service',\n        },\n      ],\n      technology: ['JavaScript', 'ReactJS', 'Redux', 'Golang'],\n    },\n    {\n      id: 'aviva',\n      position: 'Software Engineer',\n      period: 'Jun 2018 - Nov 2019',\n      company: {\n        name: 'Aviva Asia Pacific',\n        homepage: 'https://www.aviva.com.sg/',\n      },\n      projects: [\n        {\n          name: 'EzSub (easy submission)',\n          description:\n            'a point of sale iOS application used by financial advisors to manage and submit financial policies',\n        },\n        {\n          name: 'eFNA (electronic Financial Needs Analysis)',\n          description:\n            'developing a web application which helps financial advisors analyze customersâ€™ needs and advise them suited financial recommendations',\n        },\n      ],\n      technology: [\n        'JavaScript',\n        'AngularJS & Angular (TypeScript)',\n        'NodeJS',\n        'Cordova',\n        'HTML 5 / CSS 3',\n        'Sass lang',\n      ],\n    },\n    {\n      id: 'lazada',\n      position: 'Full-stack Software Engineer',\n      period: 'Mar 2018 - Jun 2018',\n      company: {\n        name: 'Lazada eLogistics',\n        homepage: 'https://www.lazada.com/',\n      },\n      projects: [\n        {\n          name: 'Logistic management system:',\n          description:\n            'building & connecting sophisticated logistic systems (seller, warehouse, express) to help managing & delivering cargo become easy and efficient. The job requires heavy system integration tasks, writing 100% coverage unit tests and handling issues on production environment. Extensive usage of Docker container & microservices & CI/CD tools',\n        },\n      ],\n      technology: [\n        'ReactJS',\n        'Redux',\n        'Golang',\n        'PHP, Laravel',\n        'Docker',\n        'Redis',\n        'PostgreSQL',\n        'HTML/CSS',\n        'Sass lang',\n      ],\n    },\n    {\n      id: 'csc',\n      position: 'Software Engineer',\n      period: 'Jun 2016 - Mar 2018',\n      company: {\n        name: 'DXC Technology',\n        homepage: 'http://www.dxc.technology/',\n      },\n      projects: [\n        {\n          name: 'IPOS Agent sales',\n          description:\n            'sophisticated insurance software used as a point of sale and financial analysis application for financial advisors. The systems was built based on complex microservices software architecture',\n        },\n        {\n          name: 'IPOS Direct sales',\n          description:\n            'Straightforward point of sale for end customers to purchase insurance products. The application was built using the most advanced frontend technologies at the time (2018) backing by complex IPOSâ€™s microservices',\n        },\n      ],\n      technology: [\n        'JavaScript',\n        'AngularJS',\n        'NodeJS, ExpressJS',\n        'Golang',\n        'Java, Spring',\n        'MySQL, Microsoft SQL',\n        'ElasticSearch, MongoDB',\n        'eSignature',\n        'Mule ESB',\n        'Docker',\n        'Amazon Web Services (AWS)',\n        'HTML 5 / CSS 3',\n        'Sass lang',\n      ],\n    },\n  ];\n  return (\n    <MyCard title=\"Experience\" id=\"experience\">\n      {companies.map(function(company) {\n        return <Company key={company.id} {...company} />;\n      })}\n    </MyCard>\n  );\n}\n","import './MyContact.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\n\nexport default function MyContact() {\n  return (\n    <MyCard title=\"Contact\" id=\"contact\">\n      <div className=\"contact\">\n        <label>Phone</label>\n        <span>\n          <a href=\"tel:+6587686989\">+65 8768 6989</a>\n        </span>\n\n        <label>Email</label>\n        <span>\n          <a href=\"mailto:lekhacman@outlook.com\">lekhacman@outlook.com</a>\n        </span>\n      </div>\n      <div></div>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { MyCard } from './MyCard';\n\nexport default function MyCareer() {\n  return (\n    <MyCard title=\"Career Objectives\" id=\"career\">\n      <p>\n        <strong>Short term: </strong>Develop useful applications for enterprises\n      </p>\n      <p>\n        <strong>Long term: </strong>Providing digital transformation services\n        for business\n      </p>\n    </MyCard>\n  );\n}\n","import './MyEdu.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\n\nexport default function MyEdu() {\n  return (\n    <MyCard title=\"Education & Awards\" id=\"edu\">\n      <h3>University of Economics HCMC</h3>\n      <p>Bachelor of Business Administration & Marketing</p>\n\n      <h3>Awards</h3>\n      <ul>\n        <li>Outstanding performance in the Java Fresher program</li>\n        <li>\n          Third prize in UEH 500 business startup contest: Mobifood business\n          development\n        </li>\n        <li>First prize in Physics at Phu Nhuan High School</li>\n      </ul>\n    </MyCard>\n  );\n}\n","import './MySkills.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\nimport * as R from 'ramda';\n\nexport default function MySkills() {\n  const spec = {\n    js: {\n      title: 'JavaScript',\n      rating: '90%',\n    },\n    jsfw: {\n      title: 'Angular/React',\n      rating: '80%',\n    },\n    node: {\n      title: 'NodeJS',\n      rating: '80%',\n    },\n    htmlCss: {\n      title: 'HTML/CSS',\n      rating: '70%',\n    },\n    linux: {\n      title: 'Linux',\n      rating: '60%',\n    },\n    go: {\n      title: 'Golang',\n      rating: '50%',\n    },\n    javaPhp: {\n      title: 'Java/PHP',\n      rating: '40%',\n    },\n    aws: {\n      title: 'AWS Cloud',\n      rating: '60%',\n    },\n  };\n\n  const { labels, skills } = Object.entries(spec).reduce(\n    (acc, [key, skill], idx) => {\n      return R.evolve(\n        {\n          labels: R.append(<label key={`label-${key}`}>{skill.title}</label>),\n          skills: R.append(\n            <div\n              className=\"score-bar\"\n              key={`score-${key}`}\n              style={{ gridRow: idx + 1 }}\n            >\n              <div className=\"score-bar__score\" style={{ width: skill.rating }}>\n                <span>{skill.rating}</span>\n              </div>\n            </div>\n          ),\n        },\n        acc\n      );\n    },\n    { labels: [], skills: [] }\n  );\n  return (\n    <MyCard title=\"Skills\" id=\"skills\">\n      <div className=\"skills\">\n        {labels}\n        {skills}\n      </div>\n      <div></div>\n    </MyCard>\n  );\n}\n","import './MyFAQ.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\n\nexport default function MyFAQ() {\n  return (\n    <MyCard title=\"FAQ\" id=\"faq\">\n      <ul>\n        <li>\n          <b>Where and how did I study code?</b> I'm a self-taught engineer.\n          There 4 major sources that help me to acquire proficiency in\n          programming:\n          <ul>\n            <li>\n              <b>Mentors</b> who are professional developers and architects\n            </li>\n            <li>\n              My job at <b>DXC Technology</b>\n            </li>\n            <li>\n              <b>\n                <a\n                  href=\"https://teachyourselfcs.com/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  teachyourselfcs.com\n                </a>\n              </b>{' '}\n              is a guide to self-study a complete Computer Science degree for\n              free using open courses\n            </li>\n            <li>\n              <b>Books.</b> I admit that I'm a serious bookworm\n            </li>\n          </ul>\n        </li>\n        <li>\n          <b>Why did i choose to become a coder?</b> I didn't. My dream is to\n          become an entrepreneur and to build a real-time analytic system to\n          analyze and study behavior of users on the web in order to help\n          marketers make good decisions on marketing stuffs (I study marketing\n          and market research). But I didn't know how to code at the time. So...\n          I taught myself coding. Eventually, the more I dive deep into code,\n          the more fun it becomes, then, i totally forgot about my initial goal\n          to become an entrepreneur. I fall in love with code and become very\n          good at it\n        </li>\n      </ul>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEnvelope,\n  faPhone,\n  faPrint,\n  faMoon,\n  faSun,\n} from '@fortawesome/free-solid-svg-icons';\nimport './MyNav.scss';\nimport PropTypes from 'prop-types';\n\nexport default function MyNav(props) {\n  const { toggleTheme, isLightTheme, print } = props;\n  const iconSize = '2x';\n\n  return (\n    <header>\n      <div>\n        <h1>Andrew Le</h1>\n      </div>\n      <div>\n        <ul>\n          <li>\n            {/*eslint-disable-next-line*/}\n            <a href=\"#\" onClick={toggleTheme}>\n              {isLightTheme ? (\n                <FontAwesomeIcon icon={faMoon} size={iconSize} />\n              ) : (\n                <FontAwesomeIcon icon={faSun} size={iconSize} />\n              )}\n            </a>\n          </li>\n          <li>\n            <a href=\"mailto:lekhacman@outlook.com\">\n              <FontAwesomeIcon icon={faEnvelope} size={iconSize} />\n            </a>\n          </li>\n          <li>\n            <a href=\"tel:+6587686989\">\n              <FontAwesomeIcon icon={faPhone} size={iconSize} />\n            </a>\n          </li>\n          <li>\n            {/*eslint-disable-next-line*/}\n            <a href=\"#\" onClick={print}>\n              <FontAwesomeIcon icon={faPrint} size={iconSize} />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n}\n\nMyNav.propTypes = {\n  print: PropTypes.func,\n  isLightTheme: PropTypes.bool,\n  toggleTheme: PropTypes.func,\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App _window={window} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { THEME, ThemeService } from '../styles/ThemeService';\nimport MyExperience from '../components/MyExperience';\nimport MyContact from '../components/MyContact';\nimport MyCareer from '../components/MyCareer';\nimport MyEdu from '../components/MyEdu';\nimport MySkills from '../components/MySkills';\nimport MyFAQ from '../components/MyFAQ';\nimport MyNav from '../components/MyNav';\n\nexport default function App(props) {\n  const { _window } = props;\n  const themeService = ThemeService(_window.localStorage);\n  themeService.register();\n\n  const [theme, setTheme] = useState({\n    isLight: themeService.get() === THEME.LIGHT,\n  });\n\n  function toggleTheme() {\n    const isLight = !theme.isLight;\n    setTheme({\n      isLight,\n    });\n    themeService.set(isLight ? THEME.LIGHT : THEME.DARK);\n  }\n\n  return (\n    <div className={`App App--${theme.isLight ? 'light' : 'dark'}`}>\n      <MyNav\n        print={_window.print.bind(_window)}\n        isLightTheme={theme.isLight}\n        toggleTheme={toggleTheme}\n      />\n      <main>\n        <MyExperience />\n        <MyContact />\n        <MyCareer />\n        <MyEdu />\n        <MySkills />\n        <MyFAQ />\n      </main>\n    </div>\n  );\n}\n"],"sourceRoot":""}