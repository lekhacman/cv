{"version":3,"sources":["api/theme.store.js","components/MyCard.js","components/experience/Company.js","components/MyExperience.js","components/MyContact.js","components/MyEdu.js","components/MySkills.js","ctx/ThemeContext.js","components/MyNav.js","components/MyCareer.js","containers/App.js","serviceWorker.js","index.js"],"names":["THEME","LIGHT","DARK","ThemeStore","localStorage","matchMedia","key","get","getItem","set","theme","hasOwnProperty","toUpperCase","TypeError","setItem","preferDark","matches","err","MyCard","props","id","title","children","className","Company","position","company","homepage","href","target","rel","src","icon","alt","name","period","projects","map","project","description","technology","tech","MyExperience","companies","MyContact","MyEdu","MySkills","Object","entries","js","rating","jsfw","node","java","go","linux","container","cloud","reduce","acc","idx","skill","R","labels","skills","style","gridRow","width","ThemeContext","React","createContext","MyNav","toggleTheme","print","ICON_SIZE","useContext","faMoon","faSun","data-testid","onClick","size","faEnvelope","faPhone","faPrint","MyCareer","App","themeStore","appCtx","store","useState","state","setState","Provider","value","Boolean","window","location","hostname","match","bind","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ea2b8f7.chunk.js","sourcesContent":["/**\n * Enum for Theme values\n * @readonly\n * @enum {string}\n */\nexport const THEME = {\n  LIGHT: 'light',\n  DARK: 'dark',\n};\n\n/**\n *\n * @param {Storage} localStorage\n * @param {function} matchMedia\n * @return {{set: set, get: (function(): THEME)}}\n */\nfunction ThemeStore({ localStorage, matchMedia }) {\n  const key = 'theme';\n  /**\n   * Get current theme\n   * @returns {THEME}\n   */\n  function get() {\n    return localStorage.getItem(key);\n  }\n\n  /**\n   * Set theme\n   * @param {THEME} theme\n   */\n  function set(theme) {\n    if (!THEME.hasOwnProperty(theme.toUpperCase())) {\n      throw new TypeError(`'${theme}' is not recognized as a theme`);\n    }\n    localStorage.setItem(key, theme);\n  }\n\n  // Self-initialize theme value\n  if (!get()) {\n    let preferDark = false;\n    try {\n      preferDark = matchMedia('(prefers-color-scheme: dark)').matches;\n    } catch (err) {}\n    set(preferDark ? THEME.DARK : THEME.LIGHT);\n  }\n\n  return {\n    get,\n    set,\n  };\n}\n\nexport default ThemeStore;\n","import React from 'react';\nimport './MyCard.scss';\nimport PropTypes from 'prop-types';\n\nfunction MyCard(props) {\n  const { id, title, children } = props;\n  return (\n    <div className=\"mycard mycard--light\" id={`mycard--${id}`}>\n      <div className=\"mycard__title\">\n        <h2>{title}</h2>\n      </div>\n      <div className=\"mycard__body\">{children}</div>\n    </div>\n  );\n}\n\nMyCard.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default MyCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Company(props) {\n  return (\n    <div className=\"company\">\n      <h3>{props.position}</h3>\n      <p>\n        {props.company.homepage ? (\n          <a\n            href={props.company.homepage}\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n            className={'employerLink'}\n          >\n            <img\n              className=\"company-icon\"\n              src={props.company.icon}\n              alt={`${props.company.name} icon`}\n            />\n            {props.company.name}\n          </a>\n        ) : (\n          props.company.name\n        )}{' '}\n        <small className=\"text-secondary\">({props.period})</small>\n      </p>\n      <label>Projects:</label>\n      <ul>\n        {props.projects.map(function(project, id) {\n          return (\n            <li key={`project-${id}`}>\n              <b>{project.name}</b>: {project.description}\n            </li>\n          );\n        })}\n      </ul>\n      <label>Technology:</label>\n      <ul className=\"technology-list\">\n        {props.technology.map(function(tech, id) {\n          return <li key={`tech-${id}`}>{tech}</li>;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nCompany.propTypes = {\n  id: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  company: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    homepage: PropTypes.string,\n    icon: PropTypes.string,\n  }),\n  period: PropTypes.string.isRequired,\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    })\n  ),\n  technology: PropTypes.arrayOf(PropTypes.string),\n};\n","import './MyExperience.scss';\nimport React from 'react';\nimport MyCard from './MyCard';\nimport Company from './experience/Company';\n\nexport default function MyExperience() {\n  const companies = [\n    {\n      id: 'spd',\n      position: 'Full-stack Software Engineer',\n      period: 'Dec 2019 - Current',\n      company: {\n        name: 'Singapore Power',\n        homepage: 'https://www.spgroup.com.sg/',\n        icon: 'https://openaccount.spgroup.com.sg/favicon.ico',\n      },\n      projects: [\n        {\n          name: 'Kiosk',\n          description:\n            'Develop and maintain the self-serve SP services application. If you visit our Customer Service Centre at Toa Payoh, you will see this application running on the self-serve kiosk machines',\n        },\n        {\n          name: 'Application status',\n          description: (\n            <span>\n              develop the application to check progress of an online\n              registration/termination service process. See more @{' '}\n              <a href=\"https://trackyouraccount.spgroup.com.sg\">\n                trackyouraccount.spgroup.com.sg\n              </a>\n            </span>\n          ),\n        },\n        {\n          name: 'Tengah Centralized Cooling Sales kit',\n          description: (\n            <span>\n              develop the application that helps our representatives in\n              consulting our customers on the centralized cooling utilities. You\n              will see this app when buying a new apartment in Tengah residence\n              . See more @{' '}\n              <a href=\"https://www.mytengah.sg/centralised-cooling\">\n                mytengah.sg\n              </a>\n            </span>\n          ),\n        },\n        {\n          name: 'Open Utilities Account',\n          description: (\n            <span>\n              develop and maintain the Open Utilities Account application. See\n              more @{' '}\n              <a href=\"https://openaccount.spgroup.com.sg\">\n                openaccount.spgroup.com.sg\n              </a>\n            </span>\n          ),\n        },\n      ],\n      technology: [\n        'JavaScript',\n        'ReactJS',\n        'Redux',\n        'Golang',\n        'Java',\n        'Spring Boot',\n      ],\n    },\n    {\n      id: 'aviva',\n      position: 'Software Engineer',\n      period: 'Jun 2018 - Nov 2019',\n      company: {\n        name: 'Aviva Asia Pacific',\n        homepage: 'https://www.aviva.com.sg/',\n        icon:\n          'https://cdn.aviva.com/static/core/v.4.13.0/images/favicon/favicon.ico',\n      },\n      projects: [\n        {\n          name: 'EzSub (easy submission)',\n          description:\n            'a point of sale iOS application used by financial advisors to manage and submit financial policies',\n        },\n        {\n          name: 'eFNA (electronic Financial Needs Analysis)',\n          description:\n            'developing a web application which helps financial advisors analyze customers’ needs and advise them suited financial recommendations',\n        },\n      ],\n      technology: [\n        'JavaScript',\n        'AngularJS & Angular (TypeScript)',\n        'NodeJS',\n        'Cordova',\n        'HTML 5 / CSS 3',\n        'Sass lang',\n      ],\n    },\n    {\n      id: 'lazada',\n      position: 'Full-stack Software Engineer',\n      period: 'Mar 2018 - Jun 2018',\n      company: {\n        name: 'Lazada eLogistics',\n        homepage: 'https://www.lazada.com/',\n        icon:\n          'https://www.lazada.com/static/code_img/new-lazada-logo-small.png',\n      },\n      projects: [\n        {\n          name: 'Logistic management system',\n          description:\n            'building & connecting sophisticated logistic systems (seller, warehouse, express) to help managing & delivering cargo become easy and efficient. The job requires heavy system integration tasks, writing 100% coverage unit tests and handling issues on production environment. Extensive usage of Docker container & microservices & CI/CD tools',\n        },\n      ],\n      technology: [\n        'ReactJS',\n        'Redux',\n        'Golang',\n        'PHP, Laravel',\n        'Docker',\n        'Redis',\n        'PostgreSQL',\n        'HTML/CSS',\n        'Sass lang',\n      ],\n    },\n    {\n      id: 'csc',\n      position: 'Software Engineer',\n      period: 'Jun 2016 - Mar 2018',\n      company: {\n        name: 'DXC Technology',\n        homepage: 'https://www.dxc.technology/',\n        icon: 'https://www.dxc.technology/favicon.ico',\n      },\n      projects: [\n        {\n          name: 'IPOS Agent sales',\n          description:\n            'sophisticated insurance software used as a point of sale and financial analysis application for financial advisors. The systems was built based on complex microservices software architecture',\n        },\n        {\n          name: 'IPOS Direct sales',\n          description:\n            'Straightforward point of sale for end customers to purchase insurance products. The application was built using the most advanced frontend technologies at the time (2018) backing by complex IPOS’s microservices',\n        },\n      ],\n      technology: [\n        'JavaScript',\n        'AngularJS',\n        'NodeJS, ExpressJS',\n        'Golang',\n        'Java, Spring',\n        'MySQL, Microsoft SQL',\n        'ElasticSearch, MongoDB',\n        'eSignature',\n        'Mule ESB',\n        'Docker',\n        'Amazon Web Services (AWS)',\n        'HTML 5 / CSS 3',\n        'Sass lang',\n      ],\n    },\n    // {\n    //   id: 'milestones',\n    //   position: 'Research Assistant',\n    //   period: 'Nov 2015 - May 2016',\n    //   company: {\n    //     name: 'Milestones',\n    //     homepage: 'https://milestonesvn.com/en/',\n    //     icon: '/favicon.ico',\n    //   },\n    //   projects: [\n    //     {\n    //       name: 'Iron Man',\n    //       description:\n    //         \"is a qualitative research project to understand doctors' opinions and practices over heart diseases medication\",\n    //     },\n    //     {\n    //       name: 'ISB',\n    //       description:\n    //         \"is a quantitative research project to study students' behaviors and opinions over choosing a bachelor degree\",\n    //     },\n    //   ],\n    //   technology: ['Office', 'Laravel (PHP)', 'MySQL'],\n    // },\n    // {\n    //   id: 'ibm',\n    //   position: 'Marketing Executive',\n    //   period: 'Nov 2015 - May 2016',\n    //   company: {\n    //     name: 'Institute of Business and Management (IBM)',\n    //     homepage: '',\n    //     icon:\n    //       'http://www.ibm.edu.vn/wp-content/uploads/2016/09/cropped-Untitled-1-32x32.png',\n    //   },\n    //   projects: [\n    //     {\n    //       name: 'MBA',\n    //       description:\n    //         'marketing planning, building digital broadcast channels, search engine optimizing, and executing ads, promotion campaigns',\n    //     },\n    //     {\n    //       name: 'IBM website',\n    //       description:\n    //         'create the official website for the institute using Wordpress and VPS',\n    //     },\n    //     {\n    //       name: 'IELTS landing page',\n    //       description: 'build a landing page for IELTS program',\n    //     },\n    //   ],\n    //   technology: [\n    //     'Virtual Private Server',\n    //     'Wordpress',\n    //     'CentOS',\n    //     'Google Analytics',\n    //     'Google Ads',\n    //   ],\n    // },\n    // {\n    //   id: 'kimvang',\n    //   position: 'Marketing Executive',\n    //   period: 'Jun 2014 - Dec 2014',\n    //   company: {\n    //     name: 'Kim Vang Garment',\n    //     homepage: '',\n    //     icon: '/favicon.ico',\n    //   },\n    //   projects: [\n    //     {\n    //       name: 'digital marketing',\n    //       description:\n    //         \"Develop company's digital marketing ecosystem, search engine optimizing\",\n    //     },\n    //   ],\n    //   technology: ['Google Analytics', 'Google Ads'],\n    // },\n  ];\n  return (\n    <MyCard title=\"Experience\" id=\"experience\">\n      {companies.map(function(company) {\n        return <Company key={company.id} {...company} />;\n      })}\n    </MyCard>\n  );\n}\n","import './MyContact.scss';\nimport React from 'react';\nimport MyCard from './MyCard';\n\nexport default function MyContact() {\n  return (\n    <MyCard title=\"Contact\" id=\"contact\">\n      <div className=\"contact\">\n        <label>Phone</label>\n        <span>\n          <a href=\"tel:+6587686989\">+65 8768 6989</a>\n        </span>\n\n        <label>Email</label>\n        <span>\n          <a href=\"mailto:lekhacman@outlook.com\">lekhacman@outlook.com</a>\n        </span>\n      </div>\n      <div></div>\n    </MyCard>\n  );\n}\n","import './MyEdu.scss';\nimport React from 'react';\nimport MyCard from './MyCard';\n\nexport default function MyEdu() {\n  return (\n    <MyCard title=\"Education & Awards\" id=\"edu\">\n      <h3>University of Science</h3>\n      <p>I am studying for a Bachelor degree in Information Technology</p>\n\n      <h3>University of Economics</h3>\n      <p>Bachelor of Business Administration & Marketing</p>\n\n      <h3>Awards</h3>\n      <ul>\n        <li>Outstanding performance in the Java Fresher program</li>\n        <li>\n          Third prize in UEH 500 business startup contest: Mobifood business\n          development\n        </li>\n        <li>First prize in Physics at Phu Nhuan High School</li>\n      </ul>\n    </MyCard>\n  );\n}\n","import './MySkills.scss';\nimport React from 'react';\nimport MyCard from './MyCard';\nimport * as R from 'ramda';\n\nexport default function MySkills() {\n  const spec = {\n    js: {\n      title: 'JavaScript',\n      rating: '90%',\n    },\n    jsfw: {\n      title: 'Angular/React',\n      rating: '80%',\n    },\n    node: {\n      title: 'NodeJS',\n      rating: '80%',\n    },\n    java: {\n      title: 'Java',\n      rating: '60%',\n    },\n    go: {\n      title: 'Golang',\n      rating: '50%',\n    },\n    linux: {\n      title: 'Linux',\n      rating: '50%',\n    },\n    container: {\n      title: 'Docker & k8s',\n      rating: '50%',\n    },\n    cloud: {\n      title: 'Cloud',\n      rating: '50%',\n    },\n  };\n\n  const { labels, skills } = Object.entries(spec).reduce(\n    (acc, [key, skill], idx) => {\n      return R.evolve(\n        {\n          labels: R.append(<label key={`label-${key}`}>{skill.title}</label>),\n          skills: R.append(\n            <div\n              className=\"score-bar\"\n              key={`score-${key}`}\n              style={{ gridRow: idx + 1 }}\n            >\n              <div className=\"score-bar__score\" style={{ width: skill.rating }}>\n                {/*<span>{skill.rating}</span>*/}\n              </div>\n            </div>\n          ),\n        },\n        acc\n      );\n    },\n    { labels: [], skills: [] }\n  );\n  return (\n    <MyCard title=\"Skills\" id=\"skills\">\n      <div className=\"skills\">\n        {labels}\n        {skills}\n      </div>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { THEME } from '../api/theme.store';\n\nconst ThemeContext = React.createContext(THEME.LIGHT);\nexport default ThemeContext;\n","import React, { useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEnvelope,\n  faMoon,\n  faPhone,\n  faPrint,\n  faSun,\n} from '@fortawesome/free-solid-svg-icons';\nimport './MyNav.scss';\nimport PropTypes from 'prop-types';\nimport { THEME } from '../api/theme.store';\nimport ThemeContext from '../ctx/ThemeContext';\n\nfunction MyNav(props) {\n  const { toggleTheme, print } = props;\n  const ICON_SIZE = '2x';\n  const icon = useContext(ThemeContext) === THEME.LIGHT ? faMoon : faSun;\n\n  return (\n    <header>\n      <div>\n        <h1>Andrew Le</h1>\n      </div>\n      <div>\n        <ul>\n          <li>\n            {/*eslint-disable-next-line*/}\n            <button data-testid=\"theme-icon\" onClick={toggleTheme}>\n              <FontAwesomeIcon icon={icon} size={ICON_SIZE} />\n            </button>\n          </li>\n          <li>\n            <a href=\"mailto:lekhacman@outlook.com\">\n              <FontAwesomeIcon icon={faEnvelope} size={ICON_SIZE} />\n            </a>\n          </li>\n          <li>\n            <a href=\"tel:+6587686989\">\n              <FontAwesomeIcon icon={faPhone} size={ICON_SIZE} />\n            </a>\n          </li>\n          <li>\n            {/*eslint-disable-next-line*/}\n            <a href=\"#\" onClick={print}>\n              <FontAwesomeIcon icon={faPrint} size={ICON_SIZE} />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n}\n\nMyNav.propTypes = {\n  print: PropTypes.func,\n  toggleTheme: PropTypes.func,\n};\n\nexport default MyNav;\n","import React from 'react';\nimport MyCard from './MyCard';\n\nexport default function MyCareer() {\n  return (\n    <MyCard title=\"About me\" id=\"career\">\n      <p>\n        I wake up in the middle the night, fix the bloody bug and get back to\n        sleep 😌\n      </p>\n    </MyCard>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\nimport { THEME } from '../api/theme.store';\nimport MyExperience from '../components/MyExperience';\nimport MyContact from '../components/MyContact';\nimport MyEdu from '../components/MyEdu';\nimport MySkills from '../components/MySkills';\n// import MyFAQ from '../components/MyFAQ';\nimport MyNav from '../components/MyNav';\nimport ThemeContext from '../ctx/ThemeContext';\nimport MyCareer from '../components/MyCareer';\n\nexport default function App(props) {\n  const themeStore = props.appCtx.store.theme;\n  const [state, setState] = useState({\n    theme: themeStore.get(),\n  });\n\n  function toggleTheme() {\n    const theme = state.theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT;\n    setState({ theme });\n    themeStore.set(theme);\n  }\n\n  return (\n    <div className={`App App--${state.theme}`}>\n      <ThemeContext.Provider value={state.theme}>\n        <MyNav print={props.appCtx.print} toggleTheme={toggleTheme} />\n        <main>\n          <MyExperience />\n          <MyContact />\n          <MyCareer />\n          <MyEdu />\n          <MySkills />\n          {/*<MyFAQ />*/}\n        </main>\n      </ThemeContext.Provider>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  appCtx: PropTypes.shape({\n    store: PropTypes.shape({\n      theme: PropTypes.shape({\n        get: PropTypes.func,\n        set: PropTypes.func,\n      }),\n    }),\n    print: PropTypes.func,\n  }),\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport ThemeStore from './api/theme.store';\n\n// Bootstrap\n\n/**\n * App Context\n * @type {{store: {theme: {set: setTheme, get: getTheme}}, print: function}}\n * @typedef AppCtx\n */\nconst appCtx = {\n  store: {\n    theme: ThemeStore(window),\n  },\n  print: window.print.bind(window),\n};\n\n// Hooray\nReactDOM.render(<App appCtx={appCtx} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}