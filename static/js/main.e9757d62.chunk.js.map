{"version":3,"sources":["components/MyNav.js","styles/ThemeService.js","components/MyCard.js","components/MyExperience.js","components/MyContact.js","components/MyCareer.js","components/MyEdu.js","components/MySkills.js","containers/App.js","serviceWorker.js","index.js"],"names":["MyNav","props","toggleTheme","isLightTheme","href","onClick","icon","faMoon","size","faSun","faEnvelope","faPhone","print","setTimeout","faPrint","THEME","LIGHT","DARK","MyCard","this","title","children","className","React","Component","MyExperience","MyContact","MyCareer","MyEdu","MySkills","theme","base","App","_window","themeService","localStorage","key","get","getItem","set","hasOwnProperty","TypeError","setItem","register","ThemeService","state","isLight","appClassName","bind","setState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9757d62.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEnvelope,\n  faPhone,\n  faPrint,\n  faMoon,\n  faSun,\n} from '@fortawesome/free-solid-svg-icons';\nimport './MyNav.scss';\nimport PropTypes from 'prop-types';\n\nexport function MyNav(props) {\n  const { toggleTheme, isLightTheme } = props;\n  const iconSize = '2x';\n\n  function print() {\n    if (!isLightTheme) {\n      toggleTheme();\n      setTimeout(function() {\n        props.print();\n        toggleTheme();\n      }, 0);\n    } else {\n      props.print();\n    }\n  }\n  return (\n    <header>\n      <div>\n        <h1>Andrew Le</h1>\n      </div>\n      <div>\n        <ul>\n          <li>\n            <a href=\"#\" onClick={toggleTheme}>\n              {isLightTheme ? (\n                <FontAwesomeIcon icon={faMoon} size={iconSize} />\n              ) : (\n                <FontAwesomeIcon icon={faSun} size={iconSize} />\n              )}\n            </a>\n          </li>\n          <li>\n            <a href=\"mailto:lekhacman@outlook.com\">\n              <FontAwesomeIcon icon={faEnvelope} size={iconSize} />\n            </a>\n          </li>\n          <li>\n            <a href=\"tel:+6587686989\">\n              <FontAwesomeIcon icon={faPhone} size={iconSize} />\n            </a>\n          </li>\n          <li>\n            <a href=\"#\" onClick={print}>\n              <FontAwesomeIcon icon={faPrint} size={iconSize} />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n}\n\nMyNav.propTypes = {\n  print: PropTypes.func,\n  isLightTheme: PropTypes.bool,\n  toggleTheme: PropTypes.func,\n};\n","export const THEME = {\n  LIGHT: 'LIGHT',\n  DARK: 'DARK',\n};\n\nexport function ThemeService(localStorage) {\n  const key = 'theme';\n  function register() {\n    if (!get()) {\n      set(THEME.LIGHT);\n    }\n  }\n\n  function get() {\n    return localStorage.getItem(key);\n  }\n\n  function set(theme) {\n    if (!THEME.hasOwnProperty(theme)) {\n      throw new TypeError(`'${theme}' is not recognized as a theme`);\n    }\n    localStorage.setItem(key, theme);\n  }\n  return {\n    get,\n    set,\n    register,\n  };\n}\n","import React from 'react';\nimport './MyCard.scss';\nimport PropTypes from 'prop-types';\n\nexport class MyCard extends React.Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <div className=\"mycard mycard--light\">\n        <div className=\"mycard__title\">\n          <h2>{title}</h2>\n        </div>\n        <div className=\"mycard__body\">{children}</div>\n      </div>\n    );\n  }\n}\n\nMyCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n","import React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyExperience() {\n  return (\n    <MyCard title=\"Experience\">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad delectus\n        eum facere, illum in porro quibusdam sapiente suscipit tempore unde!\n        Accusantium ad ducimus inventore iure maxime minima molestias natus nisi\n        temporibus vitae. Cumque debitis, dolores eius eos esse est laborum\n        laudantium, molestias nemo provident sapiente temporibus vel. Nihil,\n        praesentium reiciendis.\n      </p>\n      <p>\n        Aperiam consequuntur deleniti explicabo ipsam pariatur quae\n        reprehenderit temporibus totam vel voluptatem? Ad asperiores, at, autem\n        commodi corporis cupiditate dolorum earum et impedit minima molestias,\n        nam nesciunt odit perferendis perspiciatis provident quasi quidem quos\n        temporibus veniam? At dolor expedita inventore laboriosam possimus, sed!\n        Consequatur illo nobis provident? Aspernatur neque, quidem.\n      </p>\n      <p>\n        Accusamus accusantium dolorem eveniet laborum minus modi nemo odit optio\n        quasi totam. Aperiam, corporis cupiditate eum in ipsa non nulla\n        provident quas! Aperiam beatae blanditiis cum dignissimos earum fugit\n        hic, laudantium natus, perferendis, quasi sint temporibus totam vero. Ad\n        cumque delectus dignissimos ea fugiat id ipsa quam tempore, tenetur\n        veritatis?\n      </p>\n      <p>\n        Consectetur eaque et exercitationem hic incidunt quos sequi sint!\n        Accusantium ad aliquid amet error iste maxime minima praesentium, quasi\n        sed. Amet asperiores, dignissimos dolorem doloremque ea hic id illo\n        laboriosam laudantium minus, nemo pariatur quos ratione, tempora vel\n        voluptate voluptatibus! Animi, commodi cumque esse fugiat nostrum quidem\n        repellendus totam voluptatibus?\n      </p>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyContact() {\n  return (\n    <MyCard title=\"Contact\">\n      <p>Lorem ipsum dolor sit.</p>\n      <p>Distinctio incidunt neque quas.</p>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyCareer() {\n  return (\n    <MyCard title=\"Career Objectives\">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi, quis?\n      </p>\n      <p>\n        Asperiores atque necessitatibus porro quidem vitae? Consequatur enim\n        expedita quibusdam!\n      </p>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyEdu() {\n  return (\n    <MyCard title=\"Education & Awards\">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi, quis?\n      </p>\n      <p>\n        Asperiores atque necessitatibus porro quidem vitae? Consequatur enim\n        expedita quibusdam!\n      </p>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MySkills() {\n  return (\n    <MyCard title=\"Skills Set\">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi, quis?\n      </p>\n      <p>\n        Asperiores atque necessitatibus porro quidem vitae? Consequatur enim\n        expedita quibusdam!\n      </p>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport { MyNav } from '../components/MyNav';\nimport { THEME, ThemeService } from '../styles/ThemeService';\nimport { MyExperience } from '../components/MyExperience';\nimport { MyContact } from '../components/MyContact';\nimport { MyCareer } from '../components/MyCareer';\nimport { MyEdu } from '../components/MyEdu';\nimport { MySkills } from '../components/MySkills';\n\nconst theme = {\n  base: 'App',\n  LIGHT: 'App--light',\n  DARK: 'App--dark',\n};\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    const { _window } = props;\n    this.themeService = ThemeService(_window.localStorage);\n    this.themeService.register();\n    this.state = {\n      theme: {\n        isLight: this.themeService.get() === THEME.LIGHT,\n        appClassName: `${theme.base} ${theme[this.themeService.get()]}`,\n      },\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme() {\n    const isLight = !this.state.theme.isLight;\n    this.setState({\n      theme: {\n        isLight,\n        appClassName: `${theme.base} ${isLight ? theme.LIGHT : theme.DARK}`,\n      },\n    });\n    this.themeService.set(isLight ? THEME.LIGHT : THEME.DARK);\n  }\n\n  render() {\n    const { _window } = this.props;\n    const { appClassName, isLight } = this.state.theme;\n\n    return (\n      <div className={appClassName}>\n        <MyNav\n          print={_window.print.bind(_window)}\n          isLightTheme={isLight}\n          toggleTheme={this.toggleTheme}\n        />\n        <main>\n          <MyContact />\n          <MyCareer />\n          <MyExperience />\n          <MyEdu />\n          <MySkills />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App _window={window} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}