{"version":3,"sources":["components/MyNav.js","styles/ThemeService.js","components/MyCard.js","components/MyExperience.js","components/MyContact.js","components/MyCareer.js","components/MyEdu.js","components/MySkills.js","components/MyFAQ.js","containers/App.js","serviceWorker.js","index.js"],"names":["MyNav","this","props","toggleTheme","isLightTheme","print","href","onClick","icon","faMoon","size","faSun","faEnvelope","faPhone","faPrint","React","Component","THEME","LIGHT","DARK","MyCard","id","title","children","className","MyExperience","target","rel","style","pageBreakBefore","MyContact","MyCareer","MyEdu","MySkills","Object","entries","js","rating","jsfw","node","htmlCss","linux","go","javaPhp","aws","reduce","acc","idx","key","skill","R","labels","skills","gridRow","width","MyFAQ","theme","base","App","_window","themeService","localStorage","get","getItem","set","hasOwnProperty","TypeError","setItem","register","ThemeService","state","isLight","appClassName","bind","setState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfa1f228.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEnvelope,\n  faPhone,\n  faPrint,\n  faMoon,\n  faSun,\n} from '@fortawesome/free-solid-svg-icons';\nimport './MyNav.scss';\nimport PropTypes from 'prop-types';\n\nexport class MyNav extends React.Component {\n  render() {\n    const { toggleTheme, isLightTheme, print } = this.props;\n    const iconSize = '2x';\n\n    return (\n      <header>\n        <div>\n          <h1>Andrew Le</h1>\n        </div>\n        <div>\n          <ul>\n            <li>\n              <a href=\"#\" onClick={toggleTheme}>\n                {isLightTheme ? (\n                  <FontAwesomeIcon icon={faMoon} size={iconSize} />\n                ) : (\n                  <FontAwesomeIcon icon={faSun} size={iconSize} />\n                )}\n              </a>\n            </li>\n            <li>\n              <a href=\"mailto:lekhacman@outlook.com\">\n                <FontAwesomeIcon icon={faEnvelope} size={iconSize} />\n              </a>\n            </li>\n            <li>\n              <a href=\"tel:+6587686989\">\n                <FontAwesomeIcon icon={faPhone} size={iconSize} />\n              </a>\n            </li>\n            <li>\n              <a href=\"#\" onClick={print}>\n                <FontAwesomeIcon icon={faPrint} size={iconSize} />\n              </a>\n            </li>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n}\n\nMyNav.propTypes = {\n  print: PropTypes.func,\n  isLightTheme: PropTypes.bool,\n  toggleTheme: PropTypes.func,\n};\n","export const THEME = {\n  LIGHT: 'LIGHT',\n  DARK: 'DARK',\n};\n\nexport function ThemeService(localStorage) {\n  const key = 'theme';\n  function register() {\n    if (!get()) {\n      set(THEME.LIGHT);\n    }\n  }\n\n  function get() {\n    return localStorage.getItem(key);\n  }\n\n  function set(theme) {\n    if (!THEME.hasOwnProperty(theme)) {\n      throw new TypeError(`'${theme}' is not recognized as a theme`);\n    }\n    localStorage.setItem(key, theme);\n  }\n  return {\n    get,\n    set,\n    register,\n  };\n}\n","import React from 'react';\nimport './MyCard.scss';\nimport PropTypes from 'prop-types';\n\nexport class MyCard extends React.Component {\n  render() {\n    const { id, title, children } = this.props;\n    return (\n      <div className=\"mycard mycard--light\" id={`mycard--${id}`}>\n        <div className=\"mycard__title\">\n          <h2>{title}</h2>\n        </div>\n        <div className=\"mycard__body\">{children}</div>\n      </div>\n    );\n  }\n}\n\nMyCard.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n","import './MyExperience.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyExperience() {\n  return (\n    <MyCard title=\"Experience\" id=\"experience\">\n      <div className=\"company\">\n        <h3>Full-stack Software Engineer</h3>\n        <p>\n          <a\n            href={'https://www.spgroup.com.sg/'}\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n            className={'employerLink'}\n          >\n            Singapore Power\n          </a>{' '}\n          <small className=\"text-secondary\">(Dec 2019 - Current)</small>\n        </p>\n        <label>Projects:</label>\n        <ul>\n          <li>\n            <b>Utilities account service</b>: develop a web application for\n            utilities service self-registration\n          </li>\n          <li>\n            <b>Centralized Cooling Sales kit</b>: develop a web app for\n            proposing and selling of cooling service\n          </li>\n        </ul>\n        <label>Technology:</label>\n        <ul className=\"technology-list\">\n          <li>JavaScript</li>\n          <li>ReactJS</li>\n          <li>Redux</li>\n          <li>Golang</li>\n        </ul>\n      </div>\n      <div className=\"company\">\n        <h3>Software Engineer</h3>\n        <p>\n          <a\n            href={'https://www.aviva.com.sg/'}\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n            className={'employerLink'}\n          >\n            Aviva Asia Pacific\n          </a>{' '}\n          <small className=\"text-secondary\">(Jun 2018 - Nov 2019)</small>\n        </p>\n        <label>Projects:</label>\n        <ul>\n          <li>\n            <b>\n              <abbr title=\"Easy Submission\">EzSub</abbr>\n            </b>\n            : a point of sale iOS application used by financial advisors to\n            manage and submit financial policies.\n          </li>\n          <li>\n            <b>\n              <abbr title=\"e-Financial Needs Analysis\">eFNA</abbr>\n            </b>\n            : developing a web application which helps financial advisors\n            analyze customers&rsquo; needs and advise them suited financial\n            recommendations.\n          </li>\n        </ul>\n        <label>Technology:</label>\n        <ul className=\"technology-list\">\n          <li>JavaScript</li>\n          <li>AngularJS & Angular 7</li>\n          <li>NodeJS</li>\n          <li>Cordova</li>\n          <li>HTML 5 / CSS 3</li>\n          <li>Sass lang</li>\n        </ul>\n      </div>\n      <div className=\"company\">\n        <h3>Full-stack Software Engineer</h3>\n        <p>\n          <a\n            href={'https://www.lazada.com/'}\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n            className={'employerLink'}\n          >\n            Lazada eLogistics\n          </a>{' '}\n          <small className=\"text-secondary\">(Mar 2018 - Jun 2018)</small>\n        </p>\n        <label>Projects:</label>\n        <ul>\n          <li>\n            <b>Logistic management system</b>: building & connecting\n            sophisticated logistic systems (seller, warehouse, express) to help\n            managing & delivering cargo become easy and efficient. The job\n            requires heavy <strong>system integration</strong> tasks, writing{' '}\n            <strong>100% coverage unit tests</strong> and handling issues on\n            production environment. Extensive usage of <em>Docker</em> container\n            & <em>microservices</em> & <em>CI/CD</em> tools.\n          </li>\n        </ul>\n        <label>Technology:</label>\n        <ul className=\"technology-list\">\n          <li>ReactJS</li>\n          <li>Redux</li>\n          <li>Golang</li>\n          <li>PHP, Laravel</li>\n          <li>Docker</li>\n          <li>Redis</li>\n          <li>PostgreSQL</li>\n          <li>HTML/CSS</li>\n          <li>Sass lang</li>\n        </ul>\n      </div>\n      <div className=\"company\">\n        <h3>Software Engineer</h3>\n        <p>\n          <a\n            href={'http://www.dxc.technology/'}\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n            className={'employerLink'}\n          >\n            DXC Technology\n          </a>{' '}\n          <small className={'text-secondary'}>(Jun 2016 - Mar 2018)</small>\n        </p>\n        <p>\n          From <b>junior developer</b> to <b>system integration leader</b>\n        </p>\n        <label>Projects:</label>\n        <ul>\n          <li>\n            <b>\n              <abbr title=\"Integral Point of Sale\">IPOS</abbr> Agent sales\n            </b>\n            : sophisticated insurance software used as a point of sale and\n            financial analysis application for financial advisors. The systems\n            was built based on complex <strong>microservices </strong>\n            software architecture.\n          </li>\n          <li>\n            <b>\n              <abbr title=\"Integral Point of Sale\">IPOS</abbr> Direct sale\n            </b>\n            : Straightforward point of sale for end customers to purchase\n            insurance products. The application was built using{' '}\n            <b>the most advanced frontend technologies</b> at the time (2018)\n            backing by complex IPOS&rsquo;s microservices.\n          </li>\n        </ul>\n        <label style={{ pageBreakBefore: 'always' }}>Technology:</label>\n        <ul className=\"technology-list\">\n          <li>JavaScript</li>\n          <li>AngularJS</li>\n          <li>NodeJS, ExpressJS</li>\n          <li>Golang</li>\n          <li>Java, Spring</li>\n          <li>MySQL, Microsoft SQL</li>\n          <li>ElasticSearch, MongoDB</li>\n          <li>eSignature</li>\n          <li>Mule ESB</li>\n          <li>Docker</li>\n          <li>Amazon Web Services (AWS)</li>\n          <li>HTML 5 / CSS 3</li>\n          <li>Sass lang</li>\n        </ul>\n      </div>\n    </MyCard>\n  );\n}\n","import './MyContact.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyContact() {\n  return (\n    <MyCard title=\"Contact\" id=\"contact\">\n      <div className=\"contact\">\n        <label>Phone</label>\n        <span>\n          <a href=\"tel:+6587686989\">+65 8768 6989</a>\n        </span>\n\n        <label>Email</label>\n        <span>\n          <a href=\"mailto:lekhacman@outlook.com\">lekhacman@outlook.com</a>\n        </span>\n      </div>\n      <div></div>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyCareer() {\n  return (\n    <MyCard title=\"Career Objectives\" id=\"career\">\n      <p>\n        <strong>Short term: </strong>Develop useful applications for enterprises\n      </p>\n      <p>\n        <strong>Long term: </strong>Providing digital transformation services\n        for business\n      </p>\n    </MyCard>\n  );\n}\n","import './MyEdu.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyEdu() {\n  return (\n    <MyCard title=\"Education & Awards\" id=\"edu\">\n      <h3>University of Economics HCMC</h3>\n      <p>Bachelor of Business Administration & Marketing</p>\n\n      <h3>Awards</h3>\n      <ul>\n        <li>Outstanding performance in the Java Fresher program</li>\n        <li>\n          Third prize in UEH 500 business startup contest: Mobifood business\n          development\n        </li>\n        <li>First prize in Physics at Phu Nhuan High School</li>\n      </ul>\n    </MyCard>\n  );\n}\n","import './MySkills.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\nimport * as R from 'ramda';\n\nexport function MySkills() {\n  const spec = {\n    js: {\n      title: 'JavaScript',\n      rating: '90%',\n    },\n    jsfw: {\n      title: 'Angular/React',\n      rating: '80%',\n    },\n    node: {\n      title: 'NodeJS',\n      rating: '80%',\n    },\n    htmlCss: {\n      title: 'HTML/CSS',\n      rating: '70%',\n    },\n    linux: {\n      title: 'Linux',\n      rating: '60%',\n    },\n    go: {\n      title: 'Golang',\n      rating: '50%',\n    },\n    javaPhp: {\n      title: 'Java/PHP',\n      rating: '40%',\n    },\n    aws: {\n      title: 'AWS Cloud',\n      rating: '60%',\n    },\n  };\n\n  const { labels, skills } = Object.entries(spec).reduce(\n    (acc, [key, skill], idx) => {\n      return R.evolve(\n        {\n          labels: R.append(<label key={`label-${key}`}>{skill.title}</label>),\n          skills: R.append(\n            <div\n              className=\"score-bar\"\n              key={`score-${key}`}\n              style={{ gridRow: idx + 1 }}\n            >\n              <div className=\"score-bar__score\" style={{ width: skill.rating }}>\n                <span>{skill.rating}</span>\n              </div>\n            </div>\n          ),\n        },\n        acc\n      );\n    },\n    { labels: [], skills: [] }\n  );\n  return (\n    <MyCard title=\"Skills\" id=\"skills\">\n      <div className=\"skills\">\n        {labels}\n        {skills}\n      </div>\n      <div></div>\n    </MyCard>\n  );\n}\n","import './MyFAQ.scss';\nimport React from 'react';\nimport { MyCard } from './MyCard';\n\nexport function MyFAQ() {\n  return (\n    <MyCard title=\"FAQ\" id=\"faq\">\n      <ul>\n        <li>\n          <b>Where and how did I study code?</b> I'm a self-taught engineer.\n          There 4 major sources that help me to acquire proficiency in\n          programming:\n          <ul>\n            <li>\n              <b>Mentors</b> who are professional developers and architects.\n            </li>\n            <li>\n              My job at <b>DXC Technology</b>\n            </li>\n            <li>\n              <b>\n                <a\n                  href=\"https://teachyourselfcs.com/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  teachyourselfcs.com\n                </a>\n              </b>{' '}\n              is a guide to self-study a complete Computer Science degree for\n              free using open courses\n            </li>\n            <li>\n              <b>Books.</b> I admit that I'm a serious bookworm.\n            </li>\n          </ul>\n        </li>\n        <li>\n          <b>Why did i choose to become a coder?</b> I didn't. My dream is to\n          become an entrepreneur and to build a real-time analytic system to\n          analyze and study behavior of users on the web in order to help\n          marketers make good decisions on marketing stuffs (I study marketing\n          and market research). But I didn't know how to code at the time. So...\n          I taught myself coding. Unfortunately, the more I dive deep into code,\n          the more fun it is, and eventually, i totally forgot about my initial\n          target to become an entrepreneur. I just love coding and become very\n          good at it.\n        </li>\n      </ul>\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport { MyNav } from '../components/MyNav';\nimport { THEME, ThemeService } from '../styles/ThemeService';\nimport { MyExperience } from '../components/MyExperience';\nimport { MyContact } from '../components/MyContact';\nimport { MyCareer } from '../components/MyCareer';\nimport { MyEdu } from '../components/MyEdu';\nimport { MySkills } from '../components/MySkills';\nimport { MyFAQ } from '../components/MyFAQ';\n\nconst theme = {\n  base: 'App',\n  LIGHT: 'App--light',\n  DARK: 'App--dark',\n};\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    const { _window } = props;\n    this.themeService = ThemeService(_window.localStorage);\n    this.themeService.register();\n    this.state = {\n      theme: {\n        isLight: this.themeService.get() === THEME.LIGHT,\n        appClassName: `${theme.base} ${theme[this.themeService.get()]}`,\n      },\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme() {\n    const isLight = !this.state.theme.isLight;\n    this.setState({\n      theme: {\n        isLight,\n        appClassName: `${theme.base} ${isLight ? theme.LIGHT : theme.DARK}`,\n      },\n    });\n    this.themeService.set(isLight ? THEME.LIGHT : THEME.DARK);\n  }\n\n  render() {\n    const { _window } = this.props;\n    const { appClassName, isLight } = this.state.theme;\n\n    return (\n      <div className={appClassName}>\n        <MyNav\n          print={_window.print.bind(_window)}\n          isLightTheme={isLight}\n          toggleTheme={this.toggleTheme}\n        />\n        <main>\n          <MyExperience />\n          <MyContact />\n          <MyCareer />\n          <MyEdu />\n          <MySkills />\n          <MyFAQ />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App _window={window} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}